To check version type "git --version" 
To do config type "git config --global user.name"
To do config type "git config --global user.email"
To edit config type "git config --global --edit"
To escape edit file type ":WQ"
Create Project:

make directory mkdir "LetsLearnGit"
change directory cd "LetsLearnGit"
To make repository type "git init"
create a file and write code in it
To check repository type "ls"

Add file to staging area then comit to repository:

To check status of repository  type "git status"
now the sum.html files are untracked, 
To tracked file add them into staging by typing "git add sum.html"
To commit file into repository type "git commit -m "message initial changes"
To check all comits type "git log"

Switched / Time Travel in commits:

travel from new commit to previous comit type
git checkout f59ea0fdcda6f59efa87268a12037c9c7aa7fdcd
this hash code is a unique id of all commits
Create Branches / Switched:

To create new branch type "git branch dev"
To check how many branches you have type "git branch"
Now go to dev branch type "git checkout dev"
Now create feature branch in dev
To create branch seperately for each feature type "git checkout -b kainaat/Multiply"
Now make changes in kainaat/multiply branch:
create multiply.java file and add code in it.
then check the status untracked files will show 
to track files in staging area firstly type git add multply.java
to commit files in repository type git commit -m "added multiplyjava file"
these changes will not shown in "dev and master" branches. only show in kainaat/Multiply branch.

To switch between branches type
git checkout dev
git checkout master
git checkout kainaat/Multiply

To merge kainaat/Multiply in dev branch:
first switched to dev branch then type "git checkout dev"
then merge kainaat/Multiply branch to dev branch type "git merge kainaat/Multiply"

Git Ignore:
ap chhaty hen kuch files ko git track na kry or sensitive information git echo 
system ma na jaye usky liay we use git ignore
type cmd "touch .gitignore"
or
create new file .gitignore
all mentioned files in gitignore will not exposed in github

GITHUB:
Create github profile (see recruiters and anyone can contribute)
create Repository(public, private)
Now create repository with the name of "letslearngit"

…or create a new repository on the command line:

echo "# LetslearnGit" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/kainaatTaskeen/LetslearnGit.git
git push -u origin main

…or push an existing repository from the command line:

type git remote -v nothing will show

then write this cmd 
"git remote add origin https://github.com/kainaatTaskeen/LetslearnGit.git"
type git remote -v (fetch) and (push) origin will show

To push code in remote git type these 2 commands
git branch -M main
git push -u origin main

Now make changes in "diff.java" file.
add file in staging area "git add "Diff.java"".
commit file in repository "git commit -m "modified diff file""
push code in remote branch "git push"

Now add "dev and kainaat/Multiply" branches in remote Repository:






 


 






